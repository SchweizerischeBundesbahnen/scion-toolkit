$diamond-height: 8;
$border-color: var(--sci-color-P400);
$background-color: var(--sci-color-P100);

:host {
  display: block;
  border: 1px solid var(--sci-color-P400);
  border-radius: 5px;

  // Collapse bottom borders: Render a bottom border only if the accordion items do not fill available space
  &:not(.filled) section.accordion-item:last-child {
    border-bottom: 1px solid var(--sci-color-P400);
  }

  section.accordion-item {
    padding: 1em;

    &:not(:first-child) {
      border-top: 1px solid var(--sci-color-P400);
    }

    > header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      cursor: pointer;
      user-select: none;
    }

    > section {
      display: grid; // public API
      grid-template-columns: 100%;
      gap: .5em;
    }
  }

  &.solid section.accordion-item > section {
    margin-top: 2em;
  }

  &.bubble section.accordion-item > section {
    position: relative; // positioning anchor for the diamond
    background-color: $background-color;
    border-radius: 5px;
    border: 1px solid $border-color;
    padding: 1em;
    margin: 1em -.5em -.5em -.5em;

    //::before is used as diamond-border
    //::after is used as diamond-content
    &::before, &::after {
      content: '';
      display: inline-block;
      position: absolute;
      border: #{$diamond-height}px solid transparent;
    }

    &::before {
      top: -#{$diamond-height}px;
      left: calc(50px - #{$diamond-height}px);
      border-top-width: 0;
      border-bottom-color: $border-color;
    }

    &::after {
      top: -#{$diamond-height - 1}px;
      left: calc(50px - #{$diamond-height}px);
      border-top-width: 0;
      border-bottom-color: $background-color;
    }
  }
}

