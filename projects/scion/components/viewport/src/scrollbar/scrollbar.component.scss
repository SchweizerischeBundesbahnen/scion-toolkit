$thumb-base-height: 20px;
$thumb-default-size: 60%;
$thumb-hover-size: 100%;

:host {
  display: flex;
  border: 2px solid transparent;
  box-sizing: border-box;
  --ɵsci-scrollbar-thumb-position-fr: 0;
  --ɵsci-scrollbar-thumb-size-fr: 0;

  &.vertical {
    flex-direction: column;
  }

  &.horizontal {
    flex-direction: row;
  }

  > div.scrolltrack-start {
    flex-grow: var(--ɵsci-scrollbar-thumb-position-fr)
  }

  > div.thumb-handle {
    flex-basis: $thumb-base-height;
    display: flex;
    flex-grow: var(--ɵsci-scrollbar-thumb-size-fr);
    align-items: center;

    &.vertical {
      flex-direction: column;
    }

    &.horizontal {
      flex-direction: row;
    }

    > div.thumb {
      flex: auto;
      border-radius: 4px;
      background-color: var(--sci-scrollbar-color);
      opacity: .4;
      transition-duration: 125ms;
      transition-property: width, height;
      transition-timing-function: ease-out;

      &.vertical {
        width: $thumb-default-size;
      }

      &.horizontal {
        height: $thumb-default-size;
      }
    }
  }

  > div.scrolltrack-end {
    flex-grow: calc(1 - (var(--ɵsci-scrollbar-thumb-position-fr) + var(--ɵsci-scrollbar-thumb-size-fr)));
  }
}

// hide the scrollbar if there is no content overflow
:host-context:not(.overflow) {
  display: none;
}

// enlarge the thumb on hover or while scrolling (e.g. when dragging the thumb outside of the scrolltrack)
:host-context:hover, :host-context(.scrolling) {
  > div.thumb-handle > div.thumb {
    background-color: var(--sci-scrollbar-color);
    opacity: .75;

    &.vertical {
      width: $thumb-hover-size;
    }

    &.horizontal {
      height: $thumb-hover-size;
    }
  }
}

