$diamond-height: 8;

:host {
  display: block;
  border: 1px solid var(--sci-color-border);
  border-radius: var(--sci-corner);

  // Collapse bottom borders: Render a bottom border only if the accordion items do not fill available space
  &:not(.filled) section.accordion-item:last-child {
    border-bottom: 1px solid var(--sci-color-border);
  }

  section.accordion-item {
    display: flex;
    flex-direction: column;

    &:has(*:focus-visible) {
      outline: 1px solid var(--sci-color-accent);
    }

    &:not(:first-child) {
      border-top: 1px solid var(--sci-color-border);
    }

    > button {
      all: unset;
      display: inline-grid;
      grid-template-columns: 1fr auto;
      grid-column-gap: .5em;
      align-items: center;
      padding: 1em;
    }

    > section {
      display: grid; // public API
      grid-template-columns: 100%;
      gap: .5em;
    }
  }

  &.solid section.accordion-item > section {
    margin: 0 1em 1em 1em;
  }

  &.bubble section.accordion-item > section {
    position: relative; // positioning anchor for the diamond
    background-color: var(--sci-color-gray-100);
    border-radius: var(--sci-corner);
    border: 1px solid var(--sci-color-border);
    padding: 1em;
    margin: 0 .5em .5em .5em;

    //::before is used as diamond-border
    //::after is used as diamond-content
    &::before, &::after {
      content: '';
      display: inline-block;
      position: absolute;
      border: #{$diamond-height}px solid transparent;
    }

    &::before {
      top: -#{$diamond-height}px;
      left: calc(50px - #{$diamond-height}px);
      border-top-width: 0;
      border-bottom-color: var(--sci-color-border);
    }

    &::after {
      top: -#{$diamond-height - 1}px;
      left: calc(50px - #{$diamond-height}px);
      border-top-width: 0;
      border-bottom-color: var(--sci-color-gray-100);
    }
  }
}

